@model TaxiManager.Models.Customer

<div class="jumbotron">
    <h1>Agence.</h1>
</div>

<div class="row">
    <div style="height:500px;padding-left:15px;" id="map_canvas" class="col-sm-12 col-md-12 col-lg-9">
    </div>

    <div class="col-sm-12 col-md-12 col-lg-3">

        @using (Html.BeginForm("NewCustomer", "Agency", FormMethod.Post, new { id = "customerForm" }))
        {
            <div class="form-group">
                @Html.TextBoxFor(x => x.Adress, new { @class = "form-control", @id = "btnAdress", @placeholder = "Adresse ..." })
                @Html.ValidationMessageFor(m => m.Adress)
            </div>

            <div class="form-group">
                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @placeholder = "Prénom ..." })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>

            <div class="form-group">
                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @placeholder = "Nom ..." })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>

            <label>temps estimé</label>
            <label id="lblTime"></label>

            <div class="form-group">
                <input type="submit" value="Nouveau client" class="btn btn-success" />
            </div>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            var map;
            var elevator;
            var myOptions = { zoom: 15 };

            map = new google.maps.Map($('#map_canvas')[0], myOptions);

            var addressControlDiv = document.createElement('div');
            var addressControl = new AddAddressControl(addressControlDiv, map);

            addressControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(addressControlDiv);

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    
                    var pos = new google.maps.LatLng(position.coords.latitude,
                                                     position.coords.longitude);

                    var infowindow = new google.maps.InfoWindow({
                        map: map,
                        position: pos,
                        content: 'Vous êtes ici'
                    });

                    map.setCenter(pos);
                }, function () {
                    handleNoGeolocation(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }

            function handleNoGeolocation(errorFlag) {
                if (errorFlag) {
                    var content = 'Error: The Geolocation service failed.';
                } else {
                    var content = 'Error: Your browser doesn\'t support geolocation.';
                }

                // Set default location to Montreal
                var options = {
                    map: map,
                    position: new google.maps.LatLng(45.501689, -73.567256),
                    content: content
                };

                var infowindow = new google.maps.InfoWindow(options);
                map.setCenter(options.position);
            }

            var infowindow = new google.maps.InfoWindow({
                maxWidth: 160
            });

            // --------------
            // load customers 
            // --------------
            var customers = JSON.parse('@Html.Raw(Session["Customers"])')
            var markers = new Array();

            for (var i = 0; i < customers.length; i++) {

                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(customers[i].Latitude, customers[i].Longitude),
                    map: map
                });

                markers.push(marker);

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {

                        var content = "";
                        if (customers[i].FirstName != null && customers[i].LastName != null)
                        {
                            content = "<b>" + customers[i].FirstName + " "
                                + customers[i].LastName
                                + "</b><br>"
                                + customers[i].Adress;
                        } else {
                            content = customers[i].Adress;
                        }

                        infowindow.setContent(content);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }

            // ----------
            // load taxis
            // ----------
            

        });

        function geocodePosition(pos) {
            geocoder = new google.maps.Geocoder();
            geocoder.geocode
             ({
                 latLng: pos
             },
                 function (results, status) {
                     if (status == google.maps.GeocoderStatus.OK) {
                         $("#btnAdress").val(results[0].formatted_address);

                         var service = new google.maps.DistanceMatrixService();
                         service.getDistanceMatrix({
                             origins: "204 boulevard longpré, laval, QC H7L 3C9, Canada".split(',', 1000),
                             destinations: results[0].formatted_address.split(',', 1000),
                             travelMode: google.maps.TravelMode.DRIVING,
                             unitSystem: google.maps.UnitSystem.METRIC,
                             avoidHighways: false,
                             avoidTolls: false
                         }, function (response, status) {
                             if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                                 var distance = response.rows[0].elements[0].distance.text;
                                 var duration = response.rows[0].elements[0].duration.text;

                                 $('#lblTime').text(duration);
                             } else {
                                 alert("Unable to find the distance via road.");
                             }
                         });
                     }
                 }
             );
        }
        
        function AddAddressControl(controlDiv, map, center) {

            // We set up a variable for this since we're adding event listeners later.
            var control = this;

            // Set the center property upon construction
            control.center_ = center;
            controlDiv.style.clear = 'both';

            // Set CSS for the control border
            var goCenterUI = document.createElement('div');
            goCenterUI.style.backgroundColor = '#fff';
            goCenterUI.style.border = '2px solid #fff';
            goCenterUI.style.borderRadius = '3px';
            goCenterUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
            goCenterUI.style.cursor = 'pointer';
            goCenterUI.style.float = 'left';
            goCenterUI.style.marginBottom = '22px';
            goCenterUI.style.textAlign = 'center';
            goCenterUI.title = 'Cliquer pour ajouter manuellement une adresse';
            controlDiv.appendChild(goCenterUI);

            // Set CSS for the control interior
            var goCenterText = document.createElement('div');
            goCenterUI.style.color = 'rgb(25,25,25)';
            goCenterUI.style.fontFamily = 'Roboto,Arial,sans-serif';
            goCenterUI.style.fontSize = '16px';
            goCenterUI.style.lineHeight = '38px';
            goCenterUI.style.paddingLeft = '5px';
            goCenterUI.style.paddingRight = '5px';
            goCenterUI.innerHTML = 'Ajouter une adresse';
            goCenterUI.appendChild(goCenterText);

            // Setup the click event listener
            google.maps.event.addDomListener(goCenterUI, 'click', function () {
                marker = new google.maps.Marker(
                {
                    map: map,
                    draggable: true,
                    animation: google.maps.Animation.DROP,
                    position: map.getCenter()
                });
                google.maps.event.addListener(marker, 'dragend', function () {
                    geocodePosition(marker.getPosition());
                });

                map.controls[google.maps.ControlPosition.BOTTOM_LEFT].removeAt(0)
            });
        }

    </script>
}